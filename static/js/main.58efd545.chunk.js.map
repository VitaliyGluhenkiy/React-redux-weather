{"version":3,"sources":["pages/FiveDaysForecast/FiveDaysForecast.module.css","pages/OneDayForecast/OneDayForecast.module.css","components/SearchMenu/SearchMenu.module.css","components/ToggleDays/ToggleDays.module.css","components/Date/GetDateMonth.module.css","api/api.js","redux/actions/weatherAction.js","redux/reducers/weatherReducer.js","pages/OneDayForecast/WeatherAnimation/WeatherAnimation.jsx","pages/OneDayForecast/OneDayForecast.jsx","components/Date/GetDateMonth.jsx","pages/FiveDaysForecast/FiveDaysForecast.jsx","components/SearchMenu/SearchMenu.jsx","components/ToggleDays/ToggleDays.jsx","App.jsx","reportWebVitals.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","api","weatherValueAPI","axios","then","data","query","weatherForecastAPI","setWeatherAction","app_temp","city_name","country_code","datetime","description","type","initialState","forecast","app_max_temp","app_min_temp","isLoaded","weatherReducer","state","action","payload","renderWeather","weather","className","WeatherAnimation","OneDayForecast","dispatch","useDispatch","useSelector","weatherData","useEffect","styles","locationBox","weatherBox","temp","Math","round","GetDateMonth","date","slice","month","dateNum","FiveDaysForecast","temp_body","map","item","index","temp_block","temp_info","min_max_value","SearchMenu","searchBox","onSubmit","e","preventDefault","getWeatherValue","searchBar","placeholder","value","onChange","setQuery","setValueQuery","target","buttonInput","ToggleDays","useState","isActiveFirst","setActiveFirst","isActiveSecond","setActiveSecond","daysBlock","to","onClick","active_button","setForecastTenDays","console","log","getForecastFiveDays","App","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.58efd545.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"FiveDaysForecast_body__-Ye2w\",\"temp\":\"FiveDaysForecast_temp__2wpxQ\",\"temp_body\":\"FiveDaysForecast_temp_body__3KeQf\",\"temp_block\":\"FiveDaysForecast_temp_block__3pySd\",\"temp_info\":\"FiveDaysForecast_temp_info__1EZYu\",\"min_max_value\":\"FiveDaysForecast_min_max_value__1LmKh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"locationBox\":\"OneDayForecast_locationBox__3HvK5\",\"weatherBox\":\"OneDayForecast_weatherBox__dMWyk\",\"temp\":\"OneDayForecast_temp__CGDqS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchBox\":\"SearchMenu_searchBox__24qi0\",\"searchBar\":\"SearchMenu_searchBar___Wmy2\",\"buttonInput\":\"SearchMenu_buttonInput__2eJH2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active_button\":\"ToggleDays_active_button__3VB6o\",\"daysBlock\":\"ToggleDays_daysBlock__1O8Bu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dateNum\":\"GetDateMonth_dateNum__2JVYQ\",\"month\":\"GetDateMonth_month__1pSll\"};","import * as axios from 'axios';\n\nconst api = {\n    key: '42229ffaf56b4ce2a6822b86133c960a',\n    base: 'https://api.weatherbit.io/v2.0/current',\n    baseDaily: 'https://api.weatherbit.io/v2.0/forecast/daily',\n};\n\nexport const weatherValueAPI = {\n    getFirstValue() {\n        return axios.get(`${api.base}?city=Kiev?&key=${api.key}`).then((data) => data.data);\n    },\n    getWeatherValue(query) {\n        return axios.get(`${api.base}?city=${query}?&key=${api.key}`).then((data) => data.data);\n    },\n};\n\nexport const weatherForecastAPI = {\n    getForecastTenDays(query) {\n        return axios.get(`${api.baseDaily}?city=${query}?&key=${api.key}&days=5`).then((data) => data);\n    },\n};\n","export const setWeatherAction = (app_temp, city_name, country_code, datetime, description) => ({\n    type: 'SET_WEATHER_DATA',\n    data: { app_temp, city_name, country_code, datetime, description },\n});\n\nexport const setForecastTenDays = (data) => ({\n    type: 'SET_FORECAST_TEN_DAYS',\n    data: data,\n});\n","import { weatherForecastAPI, weatherValueAPI } from 'api/api'\r\nimport { setForecastTenDays, setWeatherAction } from '../actions/weatherAction'\r\n\r\nconst initialState = {\r\n    data: {\r\n        app_temp: null,\r\n        city_name: null,\r\n        country_code: null,\r\n        datetime: null,\r\n        description: null\r\n    },\r\n    forecast: {\r\n        app_max_temp: null,\r\n        app_min_temp: null,\r\n        datetime: null\r\n    },\r\n    isLoaded: false,\r\n    query: 'Brovary'\r\n}\r\n\r\nconst weatherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'SET_WEATHER_DATA':\r\n            return {\r\n                ...state,\r\n                data: { ...action.data }\r\n            }\r\n        case 'SET_FORECAST_TEN_DAYS':\r\n            return {\r\n                ...state,\r\n                forecast: action.data.data,\r\n                isLoaded: true\r\n            }\r\n        case 'SET_LOADED':\r\n            return {\r\n                ...state,\r\n                isLoaded: action.payload\r\n            }\r\n        case 'SET_QUERY':\r\n            return {\r\n                ...state,\r\n                query: action.query\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setQuery = query => ({\r\n    type: 'SET_QUERY',\r\n    query: query\r\n})\r\n\r\nexport const getWeatherValue = query => {\r\n    return dispatch => {\r\n        weatherValueAPI.getWeatherValue(query).then(data => {\r\n            let { app_temp, city_name, country_code, datetime } = data.data[0]\r\n            let description = data.data[0].weather.description\r\n            dispatch(\r\n                setWeatherAction(\r\n                    app_temp,\r\n                    city_name,\r\n                    country_code,\r\n                    datetime,\r\n                    description\r\n                )\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport const getFirstValue = () => {\r\n    return dispatch => {\r\n        weatherValueAPI.getFirstValue().then(data => {\r\n            let { app_temp, city_name, country_code, datetime } = data.data[0]\r\n            let description = data.data[0].weather.description\r\n            dispatch(\r\n                setWeatherAction(\r\n                    app_temp,\r\n                    city_name,\r\n                    country_code,\r\n                    datetime,\r\n                    description\r\n                )\r\n            )\r\n        })\r\n    }\r\n}\r\n\r\nexport const getForecastFiveDays = query => {\r\n    return dispatch => {\r\n        weatherForecastAPI.getForecastTenDays(query).then(data => {\r\n            dispatch(setForecastTenDays(data.data))\r\n            console.log(data.data);\r\n        })\r\n    }\r\n}\r\n\r\nexport default weatherReducer\r\n","import React from 'react';\r\nimport './WeatherAnimation.css'\r\n\r\nconst renderWeather = (weather) => {\r\n    switch (weather) {\r\n        case \"Clear sky\":\r\n            return (\r\n                <div className=\"sun\">\r\n                    <div className=\"rays\" />\r\n                </div>\r\n            );\r\n\r\n        case \"Scattered Clouds\":\r\n            return (\r\n                <div className=\"cloud white\">\r\n                    <div className=\"sunny\">\r\n                        <div className=\"m-rays\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        case \"Scattered clouds\":\r\n            return (\r\n                <div className=\"cloud white\">\r\n                    <div className=\"sunny\">\r\n                        <div className=\"m-rays\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        case \"Few clouds\":\r\n            return (\r\n                <div className=\"cloud white\">\r\n                    <div className=\"sunny\">\r\n                        <div className=\"m-rays\" />\r\n                    </div>\r\n                </div>\r\n            );\r\n        case \"Patchy rain possible\":\r\n            return (\r\n                <div className=\"cloud white\">\r\n                    <div className=\"sunny\">\r\n                        <div className=\"m-rays\" />\r\n                    </div>\r\n                    <div className=\"rain\" />\r\n                    <div className=\"rain\" />\r\n                </div>\r\n            );\r\n        case \"Overcast\":\r\n            return (\r\n                <div className=\"cloud white\">\r\n                    <div className=\"cloudy\" />\r\n                </div>\r\n            );\r\n        case \"Light rain\":\r\n            return (\r\n                <>\r\n                    <div className=\"cloud\" />\r\n                    <div className=\"rain\" />\r\n                    <div className=\"rain\" />\r\n                </>\r\n            );\r\n        case \"Overcast Clouds\":\r\n            return (\r\n                <div className=\"cloud white\">\r\n                    <div className=\"cloudy\" />\r\n                </div>\r\n            );\r\n        case \"Overcast clouds\":\r\n            return (\r\n                <div className=\"cloud white\">\r\n                    <div className=\"cloudy\" />\r\n                </div>\r\n            );\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\nconst WeatherAnimation = ({ weather }) => {\r\n    return (\r\n        <div className=\"weather-animation\">\r\n            <div className=\"weather-icon\">\r\n                <div className=\"icon\">{renderWeather(weather)}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WeatherAnimation;\r\n","import React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport styles from './OneDayForecast.module.css'\n\nimport { getFirstValue} from 'redux/reducers/weatherReducer';\nimport WeatherAnimation from './WeatherAnimation/WeatherAnimation'\n\nconst OneDayForecast = () => {\n    const dispatch = useDispatch()\n\n    const { data } = useSelector(({ weatherData }) => {\n        return {\n            data: weatherData.data,\n            query: weatherData.query\n        }\n    })\n    const weather = data.description\n\n    useEffect(() => {\n        dispatch(getFirstValue())\n    }, [dispatch])\n\n    return (\n        <main>\n            {typeof data != 'undefined' && (\n                <div>\n                    <div className={styles.locationBox}>\n                        <div>\n                            <p>\n                                {data.country_code} /{' '}\n                                {data.city_name}\n                            </p>\n                        </div>\n                        <div>{data.datetime}</div>\n                    </div>\n                    <WeatherAnimation weather={weather} />\n                    <div className={styles.weatherBox}>\n                        <div className={styles.temp}>\n                            {Math.round(data.app_temp)}°С\n                        </div>\n                    </div>\n                </div>\n            )}\n        </main>\n    )\n}\n\nexport default OneDayForecast\n","import React from 'react'\nimport styles from  './GetDateMonth.module.css'\n\nconst GetDateMonth = ({ datetime }) => {\n    let date = datetime.slice(8, 10)\n    let month = datetime.slice(5, 7)\n\n    return (\n        <div>\n            <div className={styles.dateNum}>{date}</div>\n            <div className={styles.month}>\n                {(() => {\n                    switch (month) {\n                        case '01':\n                            return 'January'\n                        case '02':\n                            return 'February'\n                        case '03':\n                            return 'March'\n                        case '04':\n                            return 'April'\n                        case '05':\n                            return 'May'\n                        case '06':\n                            return 'June'\n                        case '07':\n                            return 'July'\n                        case '08':\n                            return 'August'\n                        case '9':\n                            return 'September'\n                        case '10':\n                            return 'October'\n                        case '11':\n                            return 'November'\n                        case '12':\n                            return 'December'\n                    }\n                })()}\n            </div>\n        </div>\n    )\n}\nexport default GetDateMonth\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport GetDateMonth from 'components/Date/GetDateMonth'\r\n\r\nimport styles from './FiveDaysForecast.module.css'\r\n\r\nconst FiveDaysForecast = () => {\r\n\r\n    const { forecast, isLoaded, } = useSelector(({ weatherData }) => ({\r\n        forecast: weatherData.forecast,\r\n        isLoaded: weatherData.isLoaded,\r\n\r\n    }))\r\n\r\n\r\n    return (\r\n        <main>\r\n            <div className={styles.temp_body}>\r\n                {isLoaded &&\r\n                    forecast.map((item, index) => (\r\n                        <div key={index} className={styles.temp_block}>\r\n                            <div className={styles.temp_info}>\r\n                                <div className=\"date_time\">\r\n                                    <GetDateMonth datetime={item.datetime} />\r\n                                </div>\r\n                                <div className={styles.min_max_value}>\r\n                                    <p>max</p>\r\n                                    <p>min</p>\r\n                                </div>\r\n                                <div className={styles.temp}>\r\n                                    <div>{item.app_max_temp}°</div>\r\n                                    <div>{item.app_min_temp}°</div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n            </div>\r\n        </main>\r\n    )\r\n}\r\n\r\nexport default FiveDaysForecast\r\n","import React from 'react'\r\nimport { getWeatherValue, setQuery } from '../../redux/reducers/weatherReducer'\r\nimport { useDispatch } from 'react-redux'\r\n\r\nimport styles from './SearchMenu.module.css'\r\n\r\n\r\nconst SearchMenu = ({ query }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault()\r\n        dispatch(getWeatherValue(query))\r\n    }\r\n\r\n    const setValueQuery = query => {\r\n        dispatch(setQuery(query))\r\n    }\r\n\r\n    return (\r\n        <div className={styles.searchBox}>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    className={styles.searchBar}\r\n                    placeholder=\"Search...\"\r\n                    value={query}\r\n                    onChange={e => setValueQuery(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"submit\"\r\n                    value=\"Submit\"\r\n                    className={styles.buttonInput}\r\n                />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchMenu\r\n","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { getForecastFiveDays } from '../../redux/reducers/weatherReducer';\r\n\r\nimport styles from './ToggleDays.module.css'\r\n\r\n\r\nconst ToggleDays = () => {\r\n\r\n    const dispatch = useDispatch()\r\n    const [isActiveFirst, setActiveFirst] = useState(true)\r\n    const [isActiveSecond, setActiveSecond] = useState(false)\r\n    const { query } = useSelector(({ weatherData }) => {\r\n        return {\r\n            data: weatherData.data,\r\n            query: weatherData.query\r\n        }\r\n    })\r\n\r\n    const handleSubmitForecast = () => {\r\n        dispatch(getForecastFiveDays(query))\r\n    }\r\n\r\n    const toggleClassSecond = () => {\r\n        if(isActiveFirst){\r\n            setActiveFirst(false)\r\n            setActiveSecond(true)\r\n        }\r\n    }\r\n    const toggleClassFirst = () => {\r\n        if(isActiveSecond){\r\n            setActiveSecond(false)\r\n            setActiveFirst(true)\r\n        }\r\n    }\r\n    return (\r\n        <div className={styles.daysBlock}>\r\n            <Link to=\"/\">\r\n                <button onClick={toggleClassFirst} className={isActiveFirst ? styles.active_button : null}>\r\n                    1 day\r\n                </button>\r\n            </Link>\r\n            <Link to=\"/forecastFiveDays\">\r\n                <div onClick={toggleClassSecond}>\r\n                    <button onClick={handleSubmitForecast} className={isActiveSecond ? styles.active_button : null}>\r\n                        5 days\r\n                    </button>\r\n                </div>\r\n            </Link>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default ToggleDays\r\n","import React from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {useSelector} from 'react-redux';\r\n\r\nimport OneDayForecast from './pages/OneDayForecast/OneDayForecast'\r\nimport FiveDaysForecast from './pages/FiveDaysForecast/FiveDaysForecast'\r\nimport SearchMenu from './components/SearchMenu/SearchMenu';\r\nimport ToggleDays from './components/ToggleDays/ToggleDays';\r\n\r\nfunction App() {\r\n    const {query}= useSelector(state => state.weatherData)\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <SearchMenu query={query}/>\r\n            <ToggleDays/>\r\n            <Route\r\n                exact path=\"/\"\r\n                render={() => <OneDayForecast/>}/>\r\n            <Route\r\n                path=\"/forecastFiveDays\"\r\n                render={() => <FiveDaysForecast/>}\r\n            />\r\n            <Redirect to=\"/\"/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = (onPerfEntry) => {\n    if (onPerfEntry && onPerfEntry instanceof Function) {\n        import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n            getCLS(onPerfEntry);\n            getFID(onPerfEntry);\n            getFCP(onPerfEntry);\n            getLCP(onPerfEntry);\n            getTTFB(onPerfEntry);\n        });\n    }\n};\n\nexport default reportWebVitals;\n","import weatherReducer from './reducers/weatherReducer';\nimport { combineReducers } from 'redux';\n\nconst rootReducer = combineReducers({\n    weatherData: weatherReducer,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, createStore } from 'redux';\nimport rootReducer from './rootReducer';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './redux/store';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Router>\r\n            <Provider store={store}>\r\n                <App />\r\n            </Provider>\r\n        </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}